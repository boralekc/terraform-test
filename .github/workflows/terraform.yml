name: Setup S3 Bucket

on:
  push:
    branches:
      - main

jobs:
  setup_s3:
    name: "Setup S3 Bucket"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.0

      # Initialize Terraform from the module directory
      - name: Initialize Terraform for S3 bucket
        working-directory: ./modules/s3  # Replace with your module path
        run: terraform init -input=false

      # Apply changes to create S3 bucket
      - name: Apply changes to create S3 bucket
        working-directory: ./modules/s3  # Replace with your module path
        run: |
          terraform apply --auto-approve \
            -var="YC_CLOUD_ID=${{ secrets.YC_CLOUD_ID }}" \
            -var="YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }}" \
            -var="YC_TOKEN=${{ secrets.YC_TOKEN }}" \
            -var="ACCESS_KEY=${{ secrets.ACCESS_KEY }}" \
            -var="SECRET_KEY=${{ secrets.SECRET_KEY }}" \


  deploy_terraform:
    name: "Deploy Terraform"
    runs-on: ubuntu-latest
    needs: setup_s3
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: IAM cloud Token
        id: issue-iam-token
        uses: yc-actions/yc-iam-token@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Set environment variables from secrets
        run: |
          echo "ACCESS_KEY=${{ secrets.ACCESS_KEY }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "YC_CLOUD_ID=${{ secrets.YC_CLOUD_ID }}" >> $GITHUB_ENV
          echo "YC_FOLDER_ID=${{ secrets.YC_FOLDER_ID }}" >> $GITHUB_ENV
          echo "YC_TOKEN=${{ steps.issue-iam-token.outputs.token }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.0

      - name: Initialize Terraform backend using created S3 bucket
        run: |
          terraform init -input=false \
            -backend-config="access_key=${{ secrets.ACCESS_KEY }}" \
            -backend-config="secret_key=${{ secrets.SECRET_KEY }}" \
            -backend-config="bucket=s3-state" \
            -backend-config="region=ru-central1" \
            -backend-config="key=terraform-state/terraform.tfstate" \
            -backend-config="endpoint=https://storage.yandexcloud.net"

      - name: Plan Terraform changes
        run: terraform plan -input=false \
             -var="DB_USER=${{ secrets.DB_USER }}" \
             -var="DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
             -var="CLOUD_ID=${{ secrets.YC_CLOUD_ID }}" \
             -var="FOLDER_ID=${{ secrets.YC_FOLDER_ID }}" \
             -var="YC_TOKEN=${{ steps.issue-iam-token.outputs.token }}" \
             -var="ACCESS_KEY=${{ secrets.ACCESS_KEY }}" \
             -var="SECRET_KEY=${{ secrets.SECRET_KEY }}"

      - name: Apply Terraform changes
        run: terraform apply --auto-approve \
             -var="DB_USER=${{ secrets.DB_USER }}" \
             -var="DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
             -var="CLOUD_ID=${{ secrets.YC_CLOUD_ID }}" \
             -var="FOLDER_ID=${{ secrets.YC_FOLDER_ID }}" \
             -var="YC_TOKEN=${{ steps.issue-iam-token.outputs.token }}" \
             -var="ACCESS_KEY=${{ secrets.ACCESS_KEY }}" \
             -var="SECRET_KEY=${{ secrets.SECRET_KEY }}"
